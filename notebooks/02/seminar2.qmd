---
title: '**Seminar 2 - Python Basics**'
jupyter:
  kernelspec:
    display_name: Python (myenv)
    language: python
    name: myenv
---


For å bygge en god grunnmur i Python, trenger vi å *Python Basics* på plass. Samtidig, vil kuntig intelligens for å hjelpe til med å skrive kode, ikke være like mye til hjelp uten basis-kunnskapene. 
Dette seminaret vil ha fokus på variabeltyper og det vi gikk igjennom i forelesning 2.

Disse oppgavene er tiltenkt seminar - som trening på basiskunnskaper.. Dette er ikke arbeidskrav, men god trening til å forstå basic konsepter.

Øv på å bruke Google, forelesningsnotater og pseudokode for å løse oppgaven.

Disse oppgavene gir en kort introduksjon til noen helt grunnleggende Python-konsepter. Lykke til! 🚀


## 📌 Oppgave 1: Variabeltyper og typekonvertering
Opprett tre variabler:

* `navn` (streng),
* `alder` (heltall),
* `høyde` (flyttall).

Skriv ut verdiene og deres typer. Deretter konverter alder til en flyttall og høyde til en streng, og skriv ut de nye typene.
Kommentarer gjør koden mer forståelig for deg selv og andre.

```{python}
# Definer variabler ut i fra oppgaveteksten
navn = "Anna"
alder = 25
høyde = 1.68

# Skriv ut verdiene og typene
print(f"Navn: {navn}, type: {type(navn)}")
print(f"Alder: {alder}, type: {type(alder)}")
print(f"Høyde: {høyde}, type: {type(høyde)}")
```

## 📌 Oppgave 2: Bruk av f-strings
Bruk en f-string til å skrive ut en setning der du kombinerer en streng (`navn`), et heltall (`alder`) og et flyttall (`høyde`).

```{python}
# Definer variabler
navn = "Lars"
alder = 30
høyde = 1.82

# Bruk f-string for å lage en setning
setning = f"Hei, jeg heter {navn}, er {alder} år gammel og {høyde} meter høy."
print(setning)
```

## 📌 Oppgave 3: En enkel kalkulator
Lag to variabler, `x` og `y`, og utfør følgende operasjoner:

* Summen av `x` og `y`
* Differansen mellom `x` og `y`
* Produktet av `x` og `y`
* `x` delt på `y`

Skriv ut resultatene på en ryddig måte.

```{python}
# Definerer variablene x og y
x = 12
y = 4

# Utfør beregninger
print(f"Summen av {x} og {y} er {x + y}")
print(f"Differansen mellom {x} og {y} er {x - y}")
print(f"Produktet av {x} og {y} er {x * y}")
print(f"{x} delt på {y} er {x / y}")
```

## 📌 Oppgave 4: Sjekk om et tall er oddetall eller partall
Lag en variabel `tall`. Bruk en boolsk sjekk (vha `%`) for å avgjøre om `tall` er partall eller oddetall, og skriv ut et output.

```{python}
# Definer et tall - f.eks. 17 som vi vet er et oddetall
tall = 17

# Sjekk om tallet er partall eller oddetall
if tall % 2 == 0:
    print(f"{tall} er et partall.")
else:
    print(f"{tall} er et oddetall.")
```

### Ekstra oppgave: Hvordan ville du lagd en kode som sjekka om tallet er et primtall eller ikke?

## 📌 Oppgave 5: Konverter mellom datatyper
Definer en variabel `x` som en streng med tall, for eksempel `"42"`.

* Konverter `x` til et heltall (`int`) og legg til `10`.
* Konverter `x` til et flyttall (`float`) og multipliser med `2.5`.

Skriv ut resultatene og sjekk datatypene.

```{python}
# Definer en streng med tall
x = "42"

# Konverter til int og legg til 10
x_int = int(x)
print(f"{x} som heltall + 10: {x_int + 10}, type: {type(x_int)}")

# Konverter til float og multipliser med 2.5
x_float = float(x)
print(f"{x} som flyttall * 2.5: {x_float * 2.5}, type: {type(x_float)}")
```

## 📌 Oppgave 6: Bruk av eksponenter
Lag en variabel `tall`, og bruk eksponentoperatoren (`**`) for å:

* Heve `tall` i andre potens
* Beregne kvadratroten av `tall`

```{python}
# Definer et tall - her velger vi 9 som eksempel
tall = 9

# Beregn potens og kvadratrot
kvadrat = tall ** 2
kvadratrot = tall ** 0.5

# Skriv ut resultatene
print(f"{tall} i andre potens er {kvadrat}")
print(f"Kvadratroten av {tall} er {kvadratrot}")
```

## 📌 Oppgave 7: Beregn merverdiavgift (MVA)
Et produkt koster $800$ kr ekskl. MVA.
MVA-satsen er $25$%.

* Beregn hvor mye MVA utgjør.
* Beregn totalprisen inkl. MVA.

```{python}
# Definer pris og MVA-sats i henhold til oppgavebeskrivelsen
pris_eks_mva = 800     # i norske kroner
mva_sats = 0.25        # mva prosent

# Beregn MVA og totalpris
mva_beløp = pris_eks_mva * mva_sats
totalpris = pris_eks_mva + mva_beløp

# Skriv ut resultatene
print(f"MVA utgjør: {mva_beløp} kr")
print(f"Totalpris inkl. MVA: {totalpris} kr")
```

## 📌 Oppgave 8: Valutakonvertering
Du skal veksle $5000$ norske kroner (NOK) til euro (EUR).
Kursen er $1$ EUR = $11.5$ NOK.

* Hvor mange euro får du?

```{python}
# Definer beløp og valutakurs
nok = 5000
eur_kurs = 11.5

# Konverter til euro
eur = nok / eur_kurs

# Skriv ut resultatet, og runder av svaret til å inneholde 2 desimaler
print(f"{nok} NOK tilsvarer {eur:.2f} EUR")
```

## 📌 Oppgave 9: Lønnsberegning med skatt
En ansatt tjener $50\;000$ kr per måned, men må betale $35$% i skatt.

* Hvor mye sitter personen igjen med etter skatt?

```{python}
# Definer lønn og skattesats i henhold til oppgaven
brutto_lønn = 50000
skatt_prosent = 35

# Beregn skatt og nettolønn
skatt = brutto_lønn * (skatt_prosent / 100)
netto_lønn = brutto_lønn - skatt

# Skriv ut resultatene
print(f"Bruttolønn: {brutto_lønn} kr")
print(f"Skatt: {skatt} kr")
print(f"Nettolønn etter skatt: {netto_lønn} kr")
```

## 📌 Oppgave 10: Renteinntekter på bankinnskudd
Du setter $20\;000$ kr i banken med en årlig rente på $3$%.

* Hvor mye har du på kontoen etter $1$ år? 

Skriv et program som løser dette problemet.

```{python}
# Definer startbeløp og rente
startbeløp = 20000
rente_prosent = 3

# Beregn saldo etter ett år
saldo_etter_1_år = startbeløp * (1 + rente_prosent / 100)

# Skriv ut resultatet
print(f"Saldo etter 1 år: {saldo_etter_1_år:.2f} kr")
```

## 📌 Oppgave 11: Nedbetaling av lån
Du tar opp et lån på $300\;000$ kr med en rente på $5$% per år.
Du betaler $50\;000$ kr per år.

* Hvor mye gjeld har du igjen etter ett år?

Skriv et program som tar inn disse verdien som variabler og løser oppgaven.

```{python}
# Definer lån, rente og årlig nedbetaling
gjeld = 300000
rente_prosent = 5
årlig_nedbetaling = 50000

# Beregn gjeld etter ett år
gjeld_etter_rente = gjeld * (1 + rente_prosent / 100)       # Lånet vokser med renter
gjeld_etter_1_år = gjeld_etter_rente - årlig_nedbetaling    # Trekk fra nedbetaling

# Skriv ut resultatet
print(f"Gjeld etter 1 år: {gjeld_etter_1_år:.2f} kr")
```

# You made it! 🚀🚀🚀

